class ${ClassName}PathExpression
    extends Sooda.QL.SoqlPathExpression

constructor()
    attributes Public
begin
end

constructor(Sooda.QL.SoqlPathExpression left, System.String name)
    attributes Public
    baseArg(arg(left))
    baseArg(arg(name))
begin
end

method op_Equality(${ClassName}PathExpression left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).Equal);
end

method op_Inequality(${ClassName}PathExpression left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).NotEqual);
end

method op_Equality(${PrimaryKeyType} left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(arg(left)), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).Equal);
end

method op_Inequality(${PrimaryKeyType} left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(arg(left)), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).NotEqual);
end

method op_Equality(${ClassName}PathExpression left, ${PrimaryKeyType} right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), new Sooda.QL.SoqlLiteralExpression(arg(right)), typeref(Sooda.QL.SoqlRelationalOperator).Equal);
end

method op_Inequality(${ClassName}PathExpression left, ${PrimaryKeyType} right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), new Sooda.QL.SoqlLiteralExpression(arg(right)), typeref(Sooda.QL.SoqlRelationalOperator).NotEqual);
end

method op_Equality(${ClassName} left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(arg(left).GetPrimaryKeyValue()), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).Equal);
end

method op_Inequality(${ClassName} left, ${ClassName}PathExpression right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(new Sooda.QL.SoqlLiteralExpression(arg(left).GetPrimaryKeyValue()), arg(right), typeref(Sooda.QL.SoqlRelationalOperator).NotEqual);
end

method op_Equality(${ClassName}PathExpression left, ${ClassName} right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), new Sooda.QL.SoqlLiteralExpression(arg(right).GetPrimaryKeyValue()), typeref(Sooda.QL.SoqlRelationalOperator).Equal);
end

method op_Inequality(${ClassName}PathExpression left, ${ClassName} right)
    attributes Public,Static
    returns Sooda.QL.SoqlBooleanRelationalExpression
begin
    return new Sooda.QL.SoqlBooleanRelationalExpression(arg(left), new Sooda.QL.SoqlLiteralExpression(arg(right).GetPrimaryKeyValue()), typeref(Sooda.QL.SoqlRelationalOperator).NotEqual);
end

method Equals(System.Object o)
    attributes Public,Override
    returns System.Boolean
begin
    return typeref(System.Object).ReferenceEquals(this, arg(o));
end    

method GetHashCode()
    attributes Public,Override
    returns System.Int32
begin
    return base.GetHashCode();
end    

end
